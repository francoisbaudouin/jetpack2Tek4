name: Build-Testing

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  BUILD_TYPE: Release

jobs:
  build-linux:
    runs-on: ubuntu-22.04

    steps:
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: 3.9

    - name: Install Dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y cmake
        sudo apt-get install -y gcovr
        sudo apt-get install -y libudev-dev libgl-dev libx11-xcb-dev libfontenc-dev libxaw7-dev libxcomposite-dev libxcursor-dev libxdamage-dev libxfixes-dev libxi-dev libxinerama-dev libxmu-dev libxmuu-dev libxpm-dev libxrandr-dev libxres-dev libxss-dev libxtst-dev libxv-dev libxvmc-dev libxxf86vm-dev libxcb-render-util0-dev libxcb-xkb-dev libxcb-icccm4-dev libxcb-image0-dev libxcb-keysyms1-dev libxcb-randr0-dev libxcb-shape0-dev libxcb-sync-dev libxcb-xfixes0-dev libxcb-xinerama0-dev libxcb-dri3-dev libboost-all-dev

    - name: Install Conan
      id: conan
      uses: turtlebrowser/get-conan@main

    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Configure Conan
      run : |
        mkdir build
        cd build && conan install ../. --build=missing  -s compiler.libcxx=libstdc++11 -c tools.system.package_manager:mode=install -c tools.system.package_manager:sudo=True

    - name: Configure CMake
      run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} -DBUILD_TEST_SUITE=TRUE -DENABLE_TEST_COVERAGE=TRUE

    - name: Build
      run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}} -j

#    - name: Run Unit Tests
#      run: cd ${{github.workspace}}/build && ctest -C ${{env.BUILD_TYPE}} --output-on-failure
#
#    - name: Collect Coverage Files
#      run: |
#        find build -iname "*.gcda" -or -iname "*.gcno" -exec cp {} . \;
#        gcovr . --exclude-unreachable-branches --exclude-throw-branches --xml --output ./coverage.xml --exclude tests/
#      
#    - name: Upload Coverage Data
#      uses: codecov/codecov-action@v2
#      with:
#        path: coverage.xml
#
  build-windows:
    runs-on: windows-latest

    steps:
#    - name: Install Conan
#      id: conan
#      uses: turtlebrowser/get-conan@main

#    - name: Get msvc compiler
#      uses: ilammy/msvc-dev-cmd@v1
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Configure CMake
      run: bash build.sh

#    - name: Configure Conan
#      run : |
#        mkdir build
#        cd build && conan install ../. --build=missing -c tools.system.package_manager:mode=install -c tools.system.package_manager:sudo=True
#
#    - name: Configure CMake
#      run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} -DBUILD_TEST_SUITE=TRUE
#
#    - name: Build
#      run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}} -j

    #- name: Run Unit Tests
    #  run: cd ${{github.workspace}}/build && ctest -C ${{env.BUILD_TYPE}} --output-on-failure
